/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelsystem;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;
import java.awt.Toolkit;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.GrayColor;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfPTable;
import java.awt.Font;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.GregorianCalendar;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Hp
 */
public class empsalary extends javax.swing.JFrame {

     Connection con= connection.dbcon();
    PreparedStatement ps;
    ResultSet rs;
    
 
    
      public void filter(){
       
           if((roles.role.equals("yardimci"))||(roles.role.equals("kullanici"))){
          if(this.txtsid.getText().equals(roles.logid)){
          try{
          
      
        
        String sql="select * from gider where kimlik =? and yil=? and ay=?";
        
        
       ps=con.prepareStatement(sql);
       ps.setString(1,txtsid.getText());
          ps.setString(2,String.valueOf(LocalDate.now().getYear()));
          ps.setString(3, LocalDate.now().getMonth().toString());
       
       rs=ps.executeQuery();
  
       tblsalary.setModel(DbUtils.resultSetToTableModel(rs));
     
       }
      catch(Exception e){
          
      }
       
    }
        else{
            JOptionPane.showMessageDialog(null, "Başkasının bilgini arayamazsınız");
        }
          
      }  else{
         
             try{
                 
                 
                 
                 String sql="select * from gider where kimlik ='"+txtsid.getText()+"'";
                 
                 
                 ps=con.prepareStatement(sql);
                 //ps.setString(1,txtsearch.getText());
                 
                 rs=ps.executeQuery();
                 
                 tblsalary.setModel(DbUtils.resultSetToTableModel(rs));
                 
             }
             catch(Exception e){
                 
             }
             finally {
                 
                 try{
                     
                     rs.close();
                     ps.close();
                     
                 }
                 catch(Exception e){
                     
                 }
             }
         }}
      
    public empsalary() {
        initComponents();
         Image ikon= Toolkit.getDefaultToolkit().getImage("F://iconss project//hotel-3245949-2737141.png");
       this.setIconImage(ikon);
//         showsalary();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblsalary = new javax.swing.JTable();
        txtsid = new javax.swing.JTextField();
        btnmsearch = new javax.swing.JButton();
        btnreport = new javax.swing.JButton();
        cmbreport = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblsalary.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "ÇalışanAdı", "TC/PasportNo", "TelefonNumarası", "Yil", "Ay", "AylıkMaaşı", "HakEttiği", "Aldığı", "Kalanı", "Tarih"
            }
        ));
        tblsalary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsalaryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblsalary);

        txtsid.setText("TC/Pasport numaranızı giriniz");

        btnmsearch.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnmsearch.setText("Arayın");
        btnmsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmsearchActionPerformed(evt);
            }
        });

        btnreport.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnreport.setText("REPORT");
        btnreport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnreportMouseClicked(evt);
            }
        });
        btnreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreportActionPerformed(evt);
            }
        });

        cmbreport.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        cmbreport.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yillik Raporu", "Aylik Raporu" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 899, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtsid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cmbreport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnreport, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnmsearch)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtsid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbreport, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(btnmsearch, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(btnreport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
this.setVisible(false);
        EmpSearch es = new EmpSearch();
//es.setVisible(true);            // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void tblsalaryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsalaryMouseClicked
//transfer();        // TODO add your handling code here:
    }//GEN-LAST:event_tblsalaryMouseClicked

    private void btnmsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmsearchActionPerformed
filter();        // TODO add your handling code here:
    }//GEN-LAST:event_btnmsearchActionPerformed

    private void btnreportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnreportMouseClicked
        JFileChooser dialog = new JFileChooser();
        dialog.setSelectedFile(new File("Maaş Raporu.pdf"));
        int dialogResult = dialog.showSaveDialog(null);
     if(cmbreport.getSelectedItem()=="Aylik Raporu"){
         
    
        if (dialogResult==JFileChooser.APPROVE_OPTION){
            String filePath = dialog.getSelectedFile().getPath();

            try {

                SimpleDateFormat dateFormatss = new SimpleDateFormat("YYY-MMM-DDD");

                String sql ="select * from gider where ay='"+LocalDate.now().getMonth().toString()+"' and kimlik='"+txtsid.getText()+"'";

                            ps=con.prepareStatement(sql);
                rs=ps.executeQuery();

                Document myDocument = new Document();
                PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath));
                PdfPTable table = new PdfPTable(12);
                PdfPTable table1 = new PdfPTable(2);
                myDocument.open();

                float[] columnWidths = new float[] {5,8,7,7,7,5,5,6,7,8,7,8};
                table.setWidths(columnWidths);

                float[] columnWidthss = new float[] {7,8};
                table1.setWidths(columnWidthss);

                table.setWidthPercentage(100); //set table width to 100%
                table1.setWidthPercentage(100);
                myDocument.add(new Paragraph(txtsid.getText()+" ile calisanin "+LocalDate.now().getMonth().toString()+ " maaş raporu",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD )));
                myDocument.add(new Paragraph(new Date().toString()));
                myDocument.add(new Paragraph("                                     "));

                PdfPCell cells = new PdfPCell(new Paragraph("MAAŞ RAPORU",FontFactory.getFont(FontFactory.TIMES_ROMAN,16,Font.BOLD,BaseColor.WHITE)));
                cells.setColspan(12);
                cells.setHorizontalAlignment(Element.ALIGN_CENTER);
                cells.setBackgroundColor(BaseColor.GRAY);
                table.addCell(cells);
                //table.addCell(new PdfPCell(new Paragraph("ID",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.RED))));
                table.addCell(new PdfPCell(new Paragraph("Calisan SN",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Calisan Adi",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Kimlik",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Telefonu",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Yil",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Ay",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Calistigi Saatler",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Aylık Maası",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Hak Ettigi",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Aldıgı",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Maas Kalani",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Tarih",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));

                //table.addCell(cell);
                while(rs.next())
                {

                    //            String ids= rs.getString(1) ;
                    //            table.addCell(new PdfPCell(new Phrase(ids)));
                    String ids= rs.getString("id") ;
                    table.addCell(new PdfPCell(new Phrase(ids)));

                    String cust= rs.getString("calisanadi") ;
                    table.addCell(new PdfPCell(new Phrase(cust)));

                    String addd= rs.getString("kimlik") ;
                    table.addCell(new PdfPCell(new Phrase(addd)));

                    String qt= rs.getString("telefon") ;
                    table.addCell(new PdfPCell(new Phrase(qt)));

                    String costs= rs.getString("yil") ;
                    table.addCell(new PdfPCell(new Phrase(costs)));

                    String tt= rs.getString("ay") ;
                    table.addCell(new PdfPCell(new Phrase(tt)));

                    String dts= rs.getString("calistigi") ;
                    table.addCell(new PdfPCell(new Phrase(dts)));

                    String wrk= rs.getString("maasi") ;
                    table.addCell(new PdfPCell(new Phrase(wrk)));

                    String ds= rs.getString("hak") ;
                    table.addCell(new PdfPCell(new Phrase(ds)));

                    String dtp= rs.getString("aldigi") ;
                    table.addCell(new PdfPCell(new Phrase(dtp)));

                    String bl= rs.getString("maaskalan") ;
                    table.addCell(new PdfPCell(new Phrase(bl)));

                    String dt= rs.getString("maastarihi") ;
                    table.addCell(new PdfPCell(new Phrase(dt)));

                }

                myDocument.add(table);
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("                                     "));

              /*  /// TABLE LABAAD
                PdfPCell cellss = new PdfPCell(new Paragraph("Maaş",FontFactory.getFont(FontFactory.TIMES_ROMAN,16,Font.BOLD,BaseColor.WHITE)));
                cellss.setColspan(2);
                cellss.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellss.setBackgroundColor(BaseColor.ORANGE);
                table1.addCell(cellss);*/
              //  table1.addCell(new PdfPCell(new Paragraph("Quantity",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLUE))));
                //table1.addCell(new PdfPCell(new Paragraph("Total",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLUE))));
//                table1.addCell(new PdfPCell(new Phrase(lblcount.getText())));
  //              table1.addCell(new PdfPCell(new Phrase(lblsum.getText())));
                myDocument.add(table1);
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("         Signiture :______________________                            "));

                myDocument.close();
                JOptionPane.showMessageDialog(null,"Rapor başarıyla oluşturuldu");

            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);

            }
            finally {

                try{
                    rs.close();
                    ps.close();

                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null,e);

                }
            }}

        } 
    
     else if(cmbreport.getSelectedItem()=="Yillik Raporu"){
           if (dialogResult==JFileChooser.APPROVE_OPTION){
            String filePath = dialog.getSelectedFile().getPath();

            try {

                SimpleDateFormat dateFormatss = new SimpleDateFormat("YYY-MMM-DDD");

                String sql ="select * from gider where yil ='"+String.valueOf(LocalDate.now().getYear())+"' and kimlik='"+txtsid.getText()+"'";

                              ps=con.prepareStatement(sql);
                rs=ps.executeQuery();

                Document myDocument = new Document();
                PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath));
                PdfPTable table = new PdfPTable(12);
                PdfPTable table1 = new PdfPTable(2);
                myDocument.open();

                float[] columnWidths = new float[] {5,8,7,7,7,5,5,6,7,8,7,8};
                table.setWidths(columnWidths);

                float[] columnWidthss = new float[] {7,8};
                table1.setWidths(columnWidthss);

                table.setWidthPercentage(100); //set table width to 100%
                table1.setWidthPercentage(100);
                 myDocument.add(new Paragraph(txtsid.getText()+" ile çalışanın "+String.valueOf(LocalDate.now().getYear())+ " maaş raporu",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD )));
                myDocument.add(new Paragraph(new Date().toString()));
                myDocument.add(new Paragraph("                                     "));

                PdfPCell cells = new PdfPCell(new Paragraph("Maaş",FontFactory.getFont(FontFactory.TIMES_ROMAN,16,Font.BOLD,BaseColor.WHITE)));
                cells.setColspan(12);
                cells.setHorizontalAlignment(Element.ALIGN_CENTER);
                cells.setBackgroundColor(BaseColor.GRAY);
                table.addCell(cells);
                //table.addCell(new PdfPCell(new Paragraph("ID",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.RED))));
                table.addCell(new PdfPCell(new Paragraph("Çalışan SN",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Çalışan Adı",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Kimliği",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Telefonu",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Yili",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Ayı",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Çalıştığı Saatler",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Aylık Maaşı",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Hak Ettiği",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Aldığı",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Maaş Kalanı",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                table.addCell(new PdfPCell(new Paragraph("Tarih",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));

                //table.addCell(cell);
                while(rs.next())
                {

                    //            String ids= rs.getString(1) ;
                    //            table.addCell(new PdfPCell(new Phrase(ids)));
                    String ids= rs.getString("id") ;
                    table.addCell(new PdfPCell(new Phrase(ids)));

                    String cust= rs.getString("calisanadi") ;
                    table.addCell(new PdfPCell(new Phrase(cust)));

                    String addd= rs.getString("kimlik") ;
                    table.addCell(new PdfPCell(new Phrase(addd)));

                    String qt= rs.getString("telefon") ;
                    table.addCell(new PdfPCell(new Phrase(qt)));

                    String costs= rs.getString("yil") ;
                    table.addCell(new PdfPCell(new Phrase(costs)));

                    String tt= rs.getString("ay") ;
                    table.addCell(new PdfPCell(new Phrase(tt)));

                    String dts= rs.getString("calistigi") ;
                    table.addCell(new PdfPCell(new Phrase(dts)));

                    String wrk= rs.getString("maasi") ;
                    table.addCell(new PdfPCell(new Phrase(wrk)));

                    String ds= rs.getString("hak") ;
                    table.addCell(new PdfPCell(new Phrase(ds)));

                    String dtp= rs.getString("aldigi") ;
                    table.addCell(new PdfPCell(new Phrase(dtp)));

                    String bl= rs.getString("maaskalan") ;
                    table.addCell(new PdfPCell(new Phrase(bl)));

                    String dt= rs.getString("maastarihi") ;
                    table.addCell(new PdfPCell(new Phrase(dt)));

                }

                myDocument.add(table);
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("                                     "));

                /// TABLE LABAAD
                PdfPCell cellss = new PdfPCell(new Paragraph("Maaş",FontFactory.getFont(FontFactory.TIMES_ROMAN,16,Font.BOLD,BaseColor.WHITE)));
                cellss.setColspan(2);
                cellss.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellss.setBackgroundColor(BaseColor.ORANGE);
                table1.addCell(cellss);
              //  table1.addCell(new PdfPCell(new Paragraph("Quantity",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLUE))));
                //table1.addCell(new PdfPCell(new Paragraph("Total",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLUE))));
//                table1.addCell(new PdfPCell(new Phrase(lblcount.getText())));
  //              table1.addCell(new PdfPCell(new Phrase(lblsum.getText())));
                myDocument.add(table1);
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("                                     "));
                myDocument.add(new Paragraph("         Signiture :______________________                            "));

                myDocument.close();
                JOptionPane.showMessageDialog(null,"Rapor başarıyla oluşturuldu");

            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);

            }
            finally {

                try{
                    rs.close();
                    ps.close();

                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null,e);

                }
            }}
     }
    }
    


        /**
        * @param args the command line arguments
        */
        private void counts(){
            try{

                String sql ="select count(calisID) from calisanlar";

                ps=con.prepareStatement(sql);

                rs=ps.executeQuery();
                while(rs.next()){
                    String add2 =rs.getString(1);
//                    lblcount.setText(add2);

                }

            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "No Data");
            }
            finally {

                try{

                    rs.close();
                    ps.close();

                }
                catch(Exception e){

                }
            }
        }
        private void showdata(){
            try{
                String sql ="select * from gider";
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();
//                jTable1.setModel(DbUtils.resultSetToTableModel(rs));

            } catch(Exception e){

                JOptionPane.showMessageDialog(null, e);

            }

        }

      /*  private void filter(){
            try{
                //                String sql ="select * from employeepay where months ='"+cmbmonth.getSelectedItem()+"'";
                //                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                jPanel2.setVisible(true);
            } catch(Exception e){

                JOptionPane.showMessageDialog(null, e);

            }

        }*/
        private void avrgexam(){

            try{

                String sql ="select sum(aldigi) from gider where yil ='"+String.valueOf(LocalDate.now().getYear())+"' and ay='"+LocalDate.now().getMonth().toString()+"'";

                ps=con.prepareStatement(sql);

                rs=ps.executeQuery();
                while(rs.next()){
                    String add1 =rs.getString(1);
//                    lblsum.setText(add1);

                }
  //              jPanel2.setVisible(true);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "No Data");
            }
            finally {

                try{

                    rs.close();
                    ps.close();

                }
                catch(Exception e){

                }
            }
    }//GEN-LAST:event_btnreportMouseClicked

    private void btnreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreportActionPerformed

    }//GEN-LAST:event_btnreportActionPerformed

    
    private void transfer(){
       
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(empsalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(empsalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(empsalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(empsalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new empsalary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnmsearch;
    private javax.swing.JButton btnreport;
    private javax.swing.JComboBox cmbreport;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblsalary;
    public javax.swing.JTextField txtsid;
    // End of variables declaration//GEN-END:variables
}

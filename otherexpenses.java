/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelsystem;


import com.itextpdf.text.BaseColor;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;
import java.awt.Toolkit;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.GrayColor;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfPTable;
import java.awt.Font;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.GregorianCalendar;
import net.proteanit.sql.DbUtils;


public final class otherexpenses extends javax.swing.JFrame {
Connection con=connection.dbcon();
PreparedStatement ps;
ResultSet rs;

int id,profit,result,year;
double ySpent;

/*private void id(){
  try{
      
  
    String sql="select count(id) from kar where yil='"+String.valueOf(yearchooser.getYear())+"'";
    ps=con.prepareStatement(sql);
  
    
     //  String year=Integer.toString(yearchooser.getYear());
            
       //     ps.setString(1, year);
            
    rs=ps.executeQuery();
    
   while(rs.next()){
         String add=rs.getString(1);
          id=Integer.parseInt(add);
        
    }
    }
  catch(Exception e){
      
  }
}

/*private void yearprofit(){
   try{
       
   
    String sql="select sum(kari) from kar where yil='"+String.valueOf(yearchooser.getYear())+"'";
   
    ps=con.prepareStatement(sql);
  
     
     
   // String year=Integer.toString(yearchooser.getYear());
            
            //ps.setString(1, year);
            
             
    
    rs=ps.executeQuery();
    while(rs.next()){
          String add=rs.getString(1);
          //  jLabel7.setText(add);
     //    result=profit/id;
       // String add= rs.getString(result);
        lblprofit.setText(String.valueOf(add));
    }
    int average=Integer.parseInt(lblprofit.getText());
    int profits=average/id;
    
    lblavg.setText(String.valueOf(profits));
    }
   catch(Exception e){
       
   }
    
}

*/
    public void showprofit(){
      
        try{
            
       
        String sql="select * from digergider";
        ps=con.prepareStatement(sql);
        
        rs=ps.executeQuery();
        
        tblexpense.setModel(DbUtils.resultSetToTableModel(rs));
        
         }
        
        catch(Exception e){
            JOptionPane.showMessageDialog( null,"Veri bulunamadi");
        }
        
    }
    
        
      public void filter(){
      try{
          
      
        
        String sql="select * from digergider where yil ='"+cmbsearch.getSelectedItem()+"'";
        
        
       ps=con.prepareStatement(sql);
       //ps.setString(1,txtsearch.getText());
       
       rs=ps.executeQuery();
  
       tblexpense.setModel(DbUtils.resultSetToTableModel(rs));
     
       }
      catch(Exception e){
          
      }
       
    }
    public otherexpenses() {
        initComponents();
         Image ikon= Toolkit.getDefaultToolkit().getImage("F://iconss project//hotel-3245949-2737141.png");
       this.setIconImage(ikon);
        showprofit();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblexpense = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cmbsearch = new javax.swing.JComboBox();
        btnsearch = new javax.swing.JButton();
        txttype = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnreport = new javax.swing.JButton();
        cmbreport = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lbl = new javax.swing.JLabel();
        lblyear = new javax.swing.JLabel();
        lblmonth = new javax.swing.JLabel();
        lblm = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblspent = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblexpense.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "SN", "Yıl", "Ayı", "GiderTipi", "HarcananMikarı", "ÖdemeTürü", "Tarih"
            }
        ));
        jScrollPane1.setViewportView(tblexpense);

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setText("Ayı seçın");

        cmbsearch.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        cmbsearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" }));

        btnsearch.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnsearch.setText("Arayın");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setText("Bir gider tipi yazın");

        btnreport.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnreport.setText("REPORT");
        btnreport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnreportMouseClicked(evt);
            }
        });
        btnreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreportActionPerformed(evt);
            }
        });

        cmbreport.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        cmbreport.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yil Raporu", "Ay Raporu" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(cmbreport, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnreport, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txttype, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(cmbsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnsearch))
                            .addComponent(jLabel2)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbreport)
                    .addComponent(btnsearch, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(cmbsearch)
                    .addComponent(txttype)
                    .addComponent(btnreport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon("F:\\iconss project\\add-list-xxl.png")); // NOI18N
        jButton1.setText("DİĞER GİDER KAYDEDİN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon("F:\\iconss project\\delete.png")); // NOI18N
        jButton2.setText("SİLİN");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon("F:\\iconss project\\Text-Edit-icon.png")); // NOI18N
        jButton3.setText("GÜNCELLEYİN");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 102, 102));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Verdana", 3, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("DİĞER GİDER BİLGİSİ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel6)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel6)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl.setForeground(new java.awt.Color(255, 255, 255));
        lbl.setText("Yil");

        lblyear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblyear.setForeground(new java.awt.Color(255, 255, 255));
        lblyear.setText(":");

        lblmonth.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblmonth.setForeground(new java.awt.Color(255, 255, 255));
        lblmonth.setText(":");

        lblm.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblm.setForeground(new java.awt.Color(255, 255, 255));
        lblm.setText("Ay");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("HARCANAN MİKTARI");

        lblspent.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblspent.setForeground(new java.awt.Color(255, 255, 255));
        lblspent.setText(":");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblyear))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblmonth))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblspent, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblyear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblmonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblspent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 50, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(237, 237, 237)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
this.setVisible(false);
            // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
 filter();        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
this.setVisible(false);
otherexpense oe = new otherexpense();
oe.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
int s= JOptionPane.showConfirmDialog(null,"Silmek istediğinize emin misiniz?","Silme işlem",JOptionPane.YES_NO_CANCEL_OPTION);        
int row=this.tblexpense.getSelectedRow();
try{
 
    if(s==0){
        
    
    String sql="Delete from digergider where id='"+tblexpense.getModel().getValueAt(row, 0)+"'";
    ps=con.prepareStatement(sql);
    
    ps.execute();
    
    JOptionPane.showMessageDialog(null, "Silme işlemi başarıyla tamamlandı");
     showprofit();
     }
    else{
        
    }
    
}

catch(Exception e){
    JOptionPane.showMessageDialog(null, e.getMessage());
}

// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
int row=this.tblexpense.getSelectedRow();
otherexpense oe= new otherexpense();
 year = LocalDate.now().getYear();   
try{
   // oe.year(tblexpense.getModel().getValueAt(row, 1).toString()));
//    oe.cmbmonth.setSelectedItem(tblexpense.getModel().getValueAt(row, 2).toString());
    oe.txtexpense.setText(tblexpense.getModel().getValueAt(row, 3).toString());
    oe.txtspent.setText(tblexpense.getModel().getValueAt(row, 4).toString());
    oe.cmbpayment.setSelectedItem(tblexpense.getModel().getValueAt(row, 5).toString());
  
    Date dt1= new SimpleDateFormat("YYYY-MM-DD").parse((String)tblexpense.getModel().getValueAt(row,6));
   //oe.dtdate.setDate(dt1);
 
    
    dispose();
    oe.setVisible(true);
    oe.btnadd.setVisible(false);
    oe.btnupdate.setVisible(true);        // TODO add your handling code here:
    }                                        

catch(Exception e){
    
}        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    
    private void toplammiktari(){
    try {
        String sql="select sum(miktar) from digergider where yil='"+lblyear.getText()+"' and ay='"+lblmonth.getText()+"'";
        ps=con.prepareStatement(sql);
        
        rs=ps.executeQuery();
        
        while(rs.next()){
            String add= rs.getString(1);
            lblspent.setText(add);
        }
    } catch (SQLException ex) {
        Logger.getLogger(otherexpenses.class.getName()).log(Level.SEVERE, null, ex);
    }
  
  
    
    }
    
        
    private void toplamyilmiktari(){
    try {
        String sql="select sum(miktar) from digergider where yil='"+lblyear.getText()+"'";
        ps=con.prepareStatement(sql);
        
        rs=ps.executeQuery();
        
        while(rs.next()){
            String add= rs.getString(1);
            ySpent=Double.parseDouble(add);
        }
    } catch (SQLException ex) {
        Logger.getLogger(otherexpenses.class.getName()).log(Level.SEVERE, null, ex);
    }
  
  
    
    }
    
    
    private void btnreportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnreportMouseClicked
     
        lblyear.setText(String.valueOf(LocalDate.now().getYear()));
        lblmonth.setText(LocalDate.now().getMonth().toString());
        toplammiktari();
        
              toplamyilmiktari();  
        
        JFileChooser dialog = new JFileChooser();
        dialog.setSelectedFile(new File("Diger Gider Raporu.pdf"));
        int dialogResult = dialog.showSaveDialog(null);
        if(cmbreport.getSelectedItem()=="Ay Raporu"){

            if (dialogResult==JFileChooser.APPROVE_OPTION){
                String filePath = dialog.getSelectedFile().getPath();

                try {

                    SimpleDateFormat dateFormatss = new SimpleDateFormat("YYY-MMM-DDD");

                    String sql ="select * from digergider where yil ='"+String.valueOf(LocalDate.now().getYear())+"' and ay='"+LocalDate.now().getMonth().toString()+"'";

                    ps=con.prepareStatement(sql);
                    rs=ps.executeQuery();

                    Document myDocument = new Document();
                    PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath));
                    PdfPTable table = new PdfPTable(6);
                    PdfPTable table1 = new PdfPTable(3);
                    myDocument.open();

                    float[] columnWidths = new float[] {5,8,7,7,7,5};
                    table.setWidths(columnWidths);

                    float[] columnWidthss = new float[] {7,8,7};
                    table1.setWidths(columnWidthss);

                    table.setWidthPercentage(100); //set table width to 100%
                    table1.setWidthPercentage(100);
                    myDocument.add(new Paragraph(LocalDate.now().getMonth().toString()+ "'nin diger gider raporu",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD )));
                    myDocument.add(new Paragraph(new Date().toString()));
                    myDocument.add(new Paragraph("                                     "));

                    PdfPCell cells = new PdfPCell(new Paragraph("DIGER GIDER RAPORU",FontFactory.getFont(FontFactory.TIMES_ROMAN,16,Font.BOLD,BaseColor.WHITE)));
                    cells.setColspan(6);
                    cells.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cells.setBackgroundColor(BaseColor.GRAY);
                    table.addCell(cells);
                    //table.addCell(new PdfPCell(new Paragraph("ID",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.RED))));
                    table.addCell(new PdfPCell(new Paragraph("SN",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                    table.addCell(new PdfPCell(new Paragraph("Yil",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                    table.addCell(new PdfPCell(new Paragraph("Ay",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                    table.addCell(new PdfPCell(new Paragraph("Gider Tipi",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                    table.addCell(new PdfPCell(new Paragraph("Harcanan Miktari",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                    table.addCell(new PdfPCell(new Paragraph("Odeme Turu",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));
                    table.addCell(new PdfPCell(new Paragraph("Tarih",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK))));

                    //table.addCell(cell);
                    while(rs.next())
                    {

                        //            String ids= rs.getString(1) ;
                        //            table.addCell(new PdfPCell(new Phrase(ids)));
                        String ids= rs.getString("id") ;
                        table.addCell(new PdfPCell(new Phrase(ids)));

                        String cust= rs.getString("yil") ;
                        table.addCell(new PdfPCell(new Phrase(cust)));

                        String addd= rs.getString("ay") ;
                        table.addCell(new PdfPCell(new Phrase(addd)));

                        String qt= rs.getString("tipi") ;
                        table.addCell(new PdfPCell(new Phrase(qt)));

                        String costs= rs.getString("miktar") ;
                        table.addCell(new PdfPCell(new Phrase(costs)));

                        String tt= rs.getString("turu") ;
                        table.addCell(new PdfPCell(new Phrase(tt)));
                        
                         String tr= rs.getString("tarih") ;
                        table.addCell(new PdfPCell(new Phrase(tr)));

                    }

                    myDocument.add(table);
                    myDocument.add(new Paragraph("                                     "));
                    myDocument.add(new Paragraph("                                     "));

                    /// TABLE LABAAD
                    PdfPCell cellss = new PdfPCell(new Paragraph("KAR",FontFactory.getFont(FontFactory.TIMES_ROMAN,16,Font.BOLD,BaseColor.WHITE)));
                    cellss.setColspan(3);
                    cellss.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cellss.setBackgroundColor(BaseColor.ORANGE);
                    table1.addCell(cellss);
                   
                  table1.addCell(new PdfPCell(new Paragraph("Yil",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLUE))));
                  table1.addCell(new PdfPCell(new Paragraph("Ay",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLUE))));
                   table1.addCell(new PdfPCell(new Paragraph("Harcanan Miktar",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLUE))));
                 
                   table1.addCell(new PdfPCell(new Phrase(String.valueOf(LocalDate.now().getYear()))));
                    table1.addCell(new PdfPCell(new Phrase(LocalDate.now().getMonth().toString())));
                  table1.addCell(new PdfPCell(new Phrase(lblspent.getText())));
                    //              table1.addCell(new PdfPCell(new Phrase(lblsum.getText())));
                    myDocument.add(table1);
                    myDocument.add(new Paragraph("                                     "));
                    myDocument.add(new Paragraph("                                     "));
                    myDocument.add(new Paragraph("                                     "));
                    myDocument.add(new Paragraph("                                     "));
                    myDocument.add(new Paragraph("                                     "));
                    myDocument.add(new Paragraph("                                     "));
                       myDocument.add(new Paragraph("         Imza :______________________                            "));

                    myDocument.close();
                    JOptionPane.showMessageDialog(null,"Rapor başarıyla oluşturuldu");

                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null,e);

                }
                finally {

                    try{
                        rs.close();
                        ps.close();

                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,e);

                    }
                }}

            }

            else if(cmbreport.getSelectedItem()=="Yil Raporu"){
                if (dialogResult==JFileChooser.APPROVE_OPTION){
                    String filePath = dialog.getSelectedFile().getPath();

                    try {

                        SimpleDateFormat dateFormatss = new SimpleDateFormat("YYYY-MMM-DDD");

                        String sql ="select * from digergider where yil ='"+String.valueOf(LocalDate.now().getYear())+"' ";

                        ps=con.prepareStatement(sql);
                        rs=ps.executeQuery();

                        Document myDocument = new Document();
                        PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath));
                        PdfPTable table = new PdfPTable(2);
                      //  PdfPTable table1 = new PdfPTable(2);
                        myDocument.open();

                        float[] columnWidths = new float[] {5,8};
                        table.setWidths(columnWidths);

                        float[] columnWidthss = new float[] {7,8};
                        //table1.setWidths(columnWidthss);

                        table.setWidthPercentage(100); //set table width to 100%
                        //table1.setWidthPercentage(100);
                        myDocument.add(new Paragraph(String.valueOf(LocalDate.now().getYear())+ "'nin diger gider raporu",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD )));
                        myDocument.add(new Paragraph(new Date().toString()));
                        myDocument.add(new Paragraph("                                     "));

                   PdfPCell cellss = new PdfPCell(new Paragraph("DIGER MIKTAR",FontFactory.getFont(FontFactory.TIMES_ROMAN,16,Font.BOLD,BaseColor.WHITE)));
                        cellss.setColspan(3);
                        cellss.setHorizontalAlignment(Element.ALIGN_CENTER);
                        cellss.setBackgroundColor(BaseColor.ORANGE);
                        table.addCell(cellss);
                        table.addCell(new PdfPCell(new Paragraph("Yil",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLUE))));
                        table.addCell(new PdfPCell(new Paragraph("Harcanan Miktari",FontFactory.getFont(FontFactory.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLUE))));
                       
                       // table1.addCell(new PdfPCell(new Phrase(String.valueOf(LocalDate.now().getYear()))));
                     
                        //table.addCell(cell);
                        while(rs.next())
                        {

                            //            String ids= rs.getString(1) ;
                            //            table.addCell(new PdfPCell(new Phrase(ids)));
              
                            //String ids= rs.getString("id") ;
                            //table.addCell(new PdfPCell(new Phrase(ids)));
   table.addCell(new PdfPCell(new Phrase(lblyear.getText())));
                      //  table1.addCell(new PdfPCell(new Phrase(lblmonth.getText())));
                           table.addCell(new PdfPCell(new Phrase(String.valueOf(ySpent))));

                        }

                        myDocument.add(table);
                        myDocument.add(new Paragraph("                                     "));
                        myDocument.add(new Paragraph("                                     "));
                        myDocument.add(new Paragraph("                                     "));
                        myDocument.add(new Paragraph("                                     "));
                        
                        myDocument.add(new Paragraph("         Imza :______________________                            "));

                        myDocument.close();
                        JOptionPane.showMessageDialog(null,"Rapor başarıyla oluşturuldu");

                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,e);

                    }
                    finally {

                        try{
                            rs.close();
                            ps.close();

                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null,e);

                        }
                    }}
                }
            }

            /**
            * @param args the command line arguments
            */
            private void counts(){
                try{

                    String sql ="select count(calisID) from calisanlar";

                    ps=con.prepareStatement(sql);

                    rs=ps.executeQuery();
                    while(rs.next()){
                        String add2 =rs.getString(1);
                        //                    lblcount.setText(add2);

                    }

                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "No Data");
                }
                finally {

                    try{

                        rs.close();
                        ps.close();

                    }
                    catch(Exception e){

                    }
                }
            }
            private void showdata(){
                try{
                    String sql ="select * from gider";
                    ps = con.prepareStatement(sql);
                    rs = ps.executeQuery();
                    //                jTable1.setModel(DbUtils.resultSetToTableModel(rs));

                } catch(Exception e){

                    JOptionPane.showMessageDialog(null, e);

                }

            }

            private void selectPrevYear(){

                try {
                    int year = LocalDate.now().getYear();
                    int prevyear=year-1;
                    String sql1="Select kari from yilkari where yil=?";
                    ps=con.prepareStatement(sql1);
                    ps.setString(1, String.valueOf(prevyear));
                    rs=ps.executeQuery();

                    while(rs.next()){

                        String add= rs.getString(1);

//                        prevyprof+=Integer.parseInt(add);

                    }
                    //  jLabel11.setText(String.valueOf(prevyprof));

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }

            private void selectThisYear(){
                try{
                    year = LocalDate.now().getYear();

                    String sql="select kari from yilkari where yil=?";

                    ps=con.prepareStatement(sql);
                    ps.setString(1, String.valueOf(year));

                    rs=ps.executeQuery();

                    while(rs.next()){

                        String add= rs.getString(1);

//                        yearprof=Integer.parseInt(add);

                    }
//                    profinc=yearprof-prevyprof;

                //    profpercent=(profinc/yearprof)*100;

                //    lblinc.setText(String.valueOf(profpercent));

                }

                catch(Exception e){

                }

            }

            /*  private void filter(){
                try{
                    //                String sql ="select * from employeepay where months ='"+cmbmonth.getSelectedItem()+"'";
                    //                ps = con.prepareStatement(sql);
                    rs = ps.executeQuery();
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    jPanel2.setVisible(true);
                } catch(Exception e){

                    JOptionPane.showMessageDialog(null, e);

                }

            }*/
            private void avrgexam(){

                try{

                    String sql ="select sum(aldigi) from gider where yil ='"+String.valueOf(LocalDate.now().getYear())+"' and ay='"+LocalDate.now().getMonth().toString()+"'";

                    ps=con.prepareStatement(sql);

                    rs=ps.executeQuery();
                    while(rs.next()){
                        String add1 =rs.getString(1);
                        //                    lblsum.setText(add1);

                    }
                    //              jPanel2.setVisible(true);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "No Data");
                }
                finally {

                    try{

                        rs.close();
                        ps.close();

                    }
                    catch(Exception e){

                    }
                }
    }//GEN-LAST:event_btnreportMouseClicked

    private void btnreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreportActionPerformed

    }//GEN-LAST:event_btnreportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(otherexpense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(otherexpense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(otherexpense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(otherexpense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new otherexpense().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnreport;
    private javax.swing.JButton btnsearch;
    private javax.swing.JComboBox cmbreport;
    private javax.swing.JComboBox cmbsearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl;
    private javax.swing.JLabel lblm;
    private javax.swing.JLabel lblmonth;
    private javax.swing.JLabel lblspent;
    private javax.swing.JLabel lblyear;
    private javax.swing.JTable tblexpense;
    private javax.swing.JTextField txttype;
    // End of variables declaration//GEN-END:variables
}
